import discord
from discord.ext import tasks, commands
from discord import utils
import pymongo
from pymongo import MongoClient
import asyncio
import datetime
import os

class Admin(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.mongo_token = os.environ.get("MONGO_TOKEN")
        self.cluster = MongoClient(self.mongo_token)
        self.db = self.cluster["ciscord"]

    @commands.group(name = "admin", invoke_without_command = True)
    async def admincmd(self, ctx):
        emb = discord.Embed(description = f"–î–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞ –∫–æ–º–∞–Ω–¥ —Å–æ–∑–¥–∞–Ω–∞ –ª–∏—à—å –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞", colour = 0x0085FF)
        emb.add_field(name = "**``admin mute <—É—á–∞—Å—Ç–Ω–∏–∫> <–≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö>``**", value = "–ú—å—é—Ç–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è", inline = False)
        emb.add_field(name = "**``admin clear <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π>``**", value = "–£–¥–∞–ª—è–µ—Ç –∑–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π", inline = False)
        emb.add_field(name = "**``admin kick <—É—á–∞—Å—Ç–Ω–∏–∫>``**", value = "–ö–∏–∫–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞", inline = False)
        emb.add_field(name = "**``admin ban <—É—á–∞—Å—Ç–Ω–∏–∫>``**", value = "–ë–∞–Ω–∏—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞", inline = False)
        emb.add_field(name = "**``admin unban <—É—á–∞—Å—Ç–Ω–∏–∫>``**", value = "–°–Ω–∏–º–∞–µ—Ç –±–∞–Ω —É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞", inline = False)
        await ctx.send(embed = emb)

    async def mute_submission(self, member, mute_time): #background task
        await asyncio.sleep(mute_time) #Wait time to unmute
    @admincmd.command(name = "mute")
    @commands.has_permissions(administrator = True)
    async def mute_subcommand(self, ctx, member: discord.Member, mute_time: int = 1):
        if mute_time < 60: #Check if time < 1 minute
            emb = discord.Embed(description = f"–í—ã –∑–∞–º—å—é—á–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–∞ {mute_time} —Å–µ–∫—É–Ω–¥", colour = 0x0085FF, timestamp = datetime.datetime.now())
        else:
            emb = discord.Embed(description = f"–í—ã –∑–∞–º—å—é—á–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–∞ {mute_time // 60} –º–∏–Ω—É—Ç", colour = 0x0085FF, timestamp = datetime.datetime.now())
        await member.send(embed = emb) #dm message to member
        role = discord.utils.get(member.guild.roles, name = "ü§êMute") #find role
        await member.add_roles(role) #adding role to member
        await self.bot.loop.create_task(asyncio.sleep(mute_time)) #create background task
        await member.remove_roles(role) #remove role after time is up

    @admincmd.command(name = "clear")
    @commands.has_permissions(administrator = True)
    async def clear_subcommand(self, ctx, ammout = 100):
        msgs = 0 #counter for deleted messages
        async for msg in ctx.channel.history(limit = ammout): #couting deleted messages in chat
            msgs+=1
        await ctx.channel.purge(limit = ammout + 1) #clear messages in chat and command call message
        emb = discord.Embed(description = f":ballot_box_with_check: {ctx.author.mention}, —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ **{msgs}** —Å–æ–æ–±—â–µ–Ω–∏–π!", colour = 0x0085FF)
        await ctx.send(embed = emb, delete_after = 5)

    @admincmd.command(name = "kick")
    @commands.has_permissions(administrator = True)
    async def kick_subcommand(self, ctx, member: discord.Member, *, reason = None):
        await ctx.message.delete()
        await member.kick(reason = f"{ctx.author.name} –∏—Å–∫–ª—é—á–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.name}")
        emb = discord.Embed(description = f":white_check_mark: {member.mention} –±—ã–ª **–∫–∏–∫–Ω—É—Ç** —Å –ø–æ–º–æ—â—å—é {ctx.author.mention}", colour = 0x0085FF)
        await ctx.send(embed = emb, delete_after = 10)
    
    @admincmd.command(name = "ban")
    @commands.has_permissions(administrator = True)
    async def ban_subcommand(self, ctx, member: discord.Member, *, reason = None):
        await ctx.message.delete()
        await member.ban(reason = f"{ctx.author.name} –∑–∞–±–∞–Ω–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.name}")
        emb = discord.Embed(description = f":white_check_mark: {member.mention} –±—ã–ª **–∫–∏–∫–Ω—É—Ç** —Å –ø–æ–º–æ—â—å—é {ctx.author.mention}", colour = 0x0085FF)
        await ctx.send(embed = emb, delete_after = 10)

    @admincmd.command(name = "unban")
    async def unban_subcommand(self, ctx, *, member: discord.Member):
        await ctx.message.delete() #deleted author`s message
        banned_users = await ctx.guild.bans() #get banned users list
        async for ban_entry in banned_users: 
            user = ban_entry.user
            if user == member: #if member is mentioned in author message
                print("Founded")
                await ctx.guild.unban(user) #unban
        emb = discord.Embed(description = f":white_check_mark: {user.mention} —Å–Ω–æ–≤–∞ –¥–æ–ø—É—â–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É —Å –ø–æ–º–æ—â—å—é {ctx.author.mention}",colour = 0x0085FF)
        await ctx.send(embed = emb, delete_after = 10)
    
    @admincmd.command(name="remove")
    @commands.has_permissions(administrator=True)
    async def remove_subcommand(self, ctx, member: discord.Member, remove_category: str = None, remove_ammout: int = None):
        collection = self.db[f"{ctx.author.guild.name}"]
        if remove_category != None and remove_ammout != None:
            if remove_ammout > 0:
                if remove_category == "coins":
                    collection.update_one({"id": member.id}, {"$inc": {"coins": -remove_ammout}})
                    await ctx.message.add_reaction('‚òë')
                elif remove_category == "hrs":
                    minvoice = collection.find_one({"id": member.id})["minvoice"]
                    hrsremove_ammout = remove_ammout * 60
                    collection.update_one({"id": member.id}, {"$set": {"minvoice": minvoice - hrsremove_ammout}})
                    await ctx.message.add_reaction('‚òë')
                elif remove_ammout <= 0:
                    emb = discord.Embed(description = f"{ctx.author.mention}, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É —Å–ø—ã—Å—ã–≤–∞–Ω–∏—è –±–æ–ª—å—à–µ, —á–µ–º **0**", colour = 0x0085FF)
                    await ctx.author.send(embed = emb)
        else:
            await ctx.message.delete()
            if member is None:
                emb = discord.Embed(description = f"{ctx.author.mention}, **—É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**", colour = 0x0085FF)
                await ctx.author.send(embed = emb)
            elif remove_category is None:
                emb = discord.Embed(description = f"{ctx.author.mention}, **—É–∫–∞–∂–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é** —Å–ø—ã—Å—ã–≤–∞–Ω–∏—è (**hrs** –∏–ª–∏ **coins**)", colour = 0x0085FF)
                await ctx.author.send(embed = emb)
            elif remove_ammout is None:
                emb = discord.Embed(description = f"{ctx.author.mention}, **—É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É** —Å–ø—ã—Å—ã–≤–∞–Ω–∏—è", colour = 0x0085FF)
                await ctx.author.send(embed = emb)
    
    @admincmd.command(name="add")
    @commands.has_permissions(administrator=True)
    async def add_subcommand(self, ctx, member: discord.Member, add_category: str = None, add_ammout: int = None):
        collection = self.db[f"{ctx.author.guild.name}"]
        if add_category != None and add_ammout != None:
            if add_ammout > 0:
                if add_category == "coins":
                    collection.update_one({"id": member.id}, {"$inc": {coins": add_ammout})
                    await ctx.message.add_reaction('‚òë')
                elif add_category == "hrs":
                    minvoice = collection.find_one({"id": member.id})["minvoice"]
                    hrsadd_ammout = add_ammout * 60
                    collection.update_one({"id": member.id}, {"$set": {"minvoice": minvoice + hrsadd_ammout}})
                    await ctx.message.add_reaction('‚òë')
                elif add_ammout <= 0:
                    emb = discord.Embed(description = f"{ctx.author.mention}, **—É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É** —É–≤–µ–ª–∏—á–µ–Ω–∏—è –±–æ–ª—å—à–µ, —á–µ–º **0**", colour = 0x0085FF)
                    await ctx.author.send(embed = emb)
        else:
            await ctx.message.delete()
            if add_category is None:
                emb = discord.Embed(description = f"{ctx.author.mention}, **—É–∫–∞–∂–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é** —É–≤–µ–ª–∏—á–µ–Ω–∏—è (**hrs** –∏–ª–∏ **coins**)", colour = 0x0085FF)
                await ctx.author.send(embed = emb)
            elif add_ammout is None:
                emb = discord.Embed(description = f"{ctx.author.mention}, **—É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É** —É–≤–µ–ª–∏—á–µ–Ω–∏—è", colour = 0x0085FF)
                await ctx.author.send(embed = emb)

#Add cog file
def setup(bot): 
	bot.add_cog(Admin(bot))
